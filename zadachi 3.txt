1.
def rock_paper_scissors(player1, player2):
    if player1 == player2:
        return "Ничья"
    elif (player1 == "камень" and player2 == "ножницы") or (player1 == "ножницы" and player2 == "бумага") or (player1 == "бумага" and player2 == "камень"):
        return "Игрок 1 выиграл"
    else:
        return "Игрок 2 выиграл"
result = rock_paper_scissors("камень", "бумага")
print(result)
2.
def distribute_coins(coins):
    total_coins = sum(coins)
    num_children = 3
    if total_coins % num_children != 0:
        return False
    coins_per_child = total_coins // num_children
    for coin in coins:
        if coin > coins_per_child:
            return False
    return True
coins = [3, 3, 3]
if distribute_coins(coins):
    print("Монеты можно поровну распределить")
else:
    print("Монеты нельзя поровну распределить")
3.
def replace_signs(string):
    index = len(string) - 1
    while index >= 0 and (string[index] == '?' or string[index] == '!'):
        index -= 1
    return string[:index+1] + string[index+1:].replace('?', '').replace('!', '') + '?!'
input_string = "что делать????????????!!!!!!!!!!"
result = replace_signs(input_string)
print(result)
4.
cards = ['4', '9', 'туз', 'в']
def check_sum(cards):
    sum = 0
    for card in cards:
        if card.isdigit() and int(card) in range(2, 11):
            sum += int(card)
        elif card.lower() in ['в', 'д', 'к']:
            sum += 10
        elif card.lower() == 'туз':
            sum += 1
    if sum > 21:
        return True
    else:
        return False
print(check_sum(cards))
5.
def sum_of_numbers(string):
    total_sum = 0
    current_num = ""
    for char in string:
        if char.isdigit():
            current_num += char
        else:
            if current_num:
                total_sum += int(current_num)
                current_num = ""
    if current_num:
        total_sum += int(current_num)
    return total_sum
my_string = "aah23n54k"
result = sum_of_numbers(my_string)
print(result)
6.
def surrounded_by_plus(string):
    for i in range(len(string)):
        if string[i].isalpha():
            if i == 0 or i == len(string) - 1:
                return False
            if string[i-1] != '+' or string[i+1] != '+':
                return False
    return True
print(surrounded_by_plus("+a+5+c+6+"))
7.
def convert_time(time_str):
    if "AM" in time_str or "PM" in time_str:
        time_parts = time_str.split(":")
        hour = int(time_parts[0])
        minute = int(time_parts[1][:2])
        am_pm = time_parts[1][2:]
        if am_pm == "PM" and hour != 12:
            hour += 12
        elif am_pm == "AM" and hour == 12:
            hour = 0
        return "{:02d}:{:02d}".format(hour, minute)
    else:
        time_parts = time_str.split(":")
        hour = int(time_parts[0])
        minute = int(time_parts[1])
        if hour > 12:
            hour -= 12
            am_pm = "PM"
        elif hour == 0:
            hour = 12
            am_pm = "AM"
        else:
            am_pm = "AM"
        return "{:02d}:{:02d} {}".format(hour, minute, am_pm)
time_12h = "11:30 AM"
time_24h = "14:45"
converted_24h = convert_time(time_12h)
converted_12h = convert_time(time_24h)
print(converted_24h)
print(converted_12h)
8.
def password_complexity(password):
    score = 0
    if len(password) >= 6:
        score += 1
    if any(char.isdigit() for char in password):
        score += 1
    if any(char.isupper() for char in password):
        score += 1
    if any(char.islower() for char in password):
        score += 1
    if any(char in '!@#$%^&*()-+' for char in password):
        score += 1
    return score
password = input("Введите пароль: ")
complexity = password_complexity(password)
print("Сложность пароля:", complexity)
9.
def number_to_russian_string(number):
    if number < 0 or number > 999:
        return "Число должно быть в диапазоне от 0 до 999"
    units = ['', 'один', 'два', 'три', 'четыре', 'пять', 'шесть', 'семь', 'восемь', 'девять']
    tens = ['', '', 'двадцать', 'тридцать', 'сорок', 'пятьдесят', 'шестьдесят', 'семьдесят', 'восемьдесят', 'девяносто']
    teens = ['', 'одиннадцать', 'двенадцать', 'тринадцать', 'четырнадцать', 'пятнадцать', 'шестнадцать', 'семнадцать',
             'восемнадцать', 'девятнадцать']
    hundreds = ['', 'сто', 'двести', 'триста', 'четыреста', 'пятьсот', 'шестьсот', 'семьсот', 'восемьсот', 'девятьсот']
    if number == 0:
        return "ноль"
    units_digit = number % 10
    tens_digit = (number // 10) % 10
    hundreds_digit = (number // 100) % 10
    result = ''
    if hundreds_digit != 0:
        result += hundreds[hundreds_digit] + ' '
    if tens_digit == 1:
        result += teens[units_digit]
    else:
        result += tens[tens_digit] + ' ' + units[units_digit]
    return result.strip()
print(number_to_russian_string(765))
10.
def count_lucky_numbers(n):
    count = 0
    for i in range(10**(n//2)):
        left_sum = right_sum = 0
        number = str(i).zfill(n//2)
        for digit in number:
            left_sum += int(digit)
            right_sum += int(digit)
        if left_sum == right_sum:
            count += 1
    return count
n = 4
result = count_lucky_numbers(n)
print(result)